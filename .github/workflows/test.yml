name: Pak-RV-Core

on: [pull_request, push]

jobs:

  Pak-RV-Core-test:
    runs-on: ubuntu-latest

    steps:
    - name: Repository Checkout
      uses: actions/checkout@v3
      with:
        path: Pak-RV-Core

    - name: Pak-RV-CI-CD-Cache 
      uses: actions/cache@v3
      id: pakrv-cache   # name of the cache
      with:             # what to cache: the folder(s)
        path: |
          ~/Pak-RV-Core/verif/                                  # path to the folder(s)
          ~/Pak-RV-Core/verif/riscof_compliance                 # path to the folder(s)
        key: |
          ${{ runner.os }}-verif-968efa7
          ${{ runner.os }}-riscof_compliance-968efa7
        
    - name: Install Verilator, Sail, RISC-OF and Cocotb
      run: |

        sudo apt update
        sudo apt-get -y install ccache # compiler cache (ccache)
        set -e                         # exit immediately exit with non-zero value (or throw error and stop the CI/CD)
        git clone https://github.com/AhsanAliUet/tools
        cd $GITHUB_WORKSPACE/tools
        tar -xzf verilator.tar.gz
        tar -xzf sail_cSim.tar.gz

        # Move verilator directory to /usr/local/ directory and add /usr/local/verilator/bin to PATH
        # Add the same verilator directory to /usr/local/share
        # Why adding same directory to /usr/local/share/ after adding to PATH?
        # this is because verilator_bin uses verilator/include/verilated_std.sv
        # if /usr/local/verilator/include/verilated_std.sv added in PATH, is not read by verilator_bin
        # but easily read when put whole verilator directory also in share directory which is ultimately /usr/local/share/verilator/
        export VERILATOR_ROOT=$(pwd)/verilator
        sudo mkdir /usr/local/share/verilator
        sudo cp -r verilator/* /usr/local/share/verilator/
        echo $GITHUB_WORKSPACE/tools/verilator/bin >> $GITHUB_PATH       # add verilator to PATH

        echo $GITHUB_WORKSPACE/tools/sail_cSim >> $GITHUB_PATH           # add sail_cSim to PATH

        pip3 install cocotb
        pip3 install git+https://github.com/riscv/riscof.git

    - name: Setup RISC-V GNU toolchain
      run: |
        
        wget https://github.com/stnolting/riscv-gcc-prebuilt/releases/download/rv32i-4.0.0/riscv32-unknown-elf.gcc-12.1.0.tar.gz
        tar -xzf riscv32-unknown-elf.gcc-12.1.0.tar.gz
        echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH

    - name: Run Compliance Verification Framework
      if: steps.pakrv-cache.outputs.cache-hit != 'true'
      run: |
        cd Pak-RV-Core
        git submodule update --init --recursive
        cd verif/riscof_compliance
        chmod +x ./run-compliance.sh
        ./run-compliance.sh
